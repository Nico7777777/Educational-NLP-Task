page:  1 | user:         shawnForsythe | id:    1 | parent:    0 | date: Oct 29, 2013
	text block 1: In the given examples, the last one isMatch("aab", "c*a*b") → true; don't understand why these two strings matches?
Can someone please help me understand this example?

page:  1 | user:         prateek gupta | id:    2 | parent:    0 | date: Apr 27, 2020
	text block 1: Test case
s = "ab"
p = .*
	text block 2: .* is equivalent to "", ".", "..", "..." so on. And then each "." can be replaced with a different character.
	text block 3: That's why for this test case output is: true

page:  1 | user:      Nattawut Phetmak | id:    3 | parent:    0 | date: Aug 30, 2023
	text block 1: what the fuck is the pattern: a***abc ??? thet's not even in the specification !!!

page:  1 | user:                    方杰 | id:    4 | parent:    0 | date: Oct 19, 2014
	text block 1: In the problem example case:
isMatch("ab", ".*") → true
	text block 2: while the Input ("ab", ".*c") Expected output is false??

page:  1 | user:           Hakula Chen | id:    5 | parent:    0 | date: Sep 12, 2023
	text block 1: Case 355:
"abc"
"a***abc"
	text block 2: Why is this case valid?
Note that: It is guaranteed for each appearance of the character '*', there will be a previous valid character to match. While the second '*' is not a valid character since it is a special character.

page:  1 | user:           Yaxue Cheng | id:    6 | parent:    0 | date: Jan 11, 2015
	text block 1: Here is the output:
	text block 2: Input: "ab", ".*"
Output: false
Expected: true

page:  1 | user:            wonderflow | id:    7 | parent:    0 | date: May 09, 2015
	text block 1: I'm not very understand why?
	text block 2: Could someone explain for me? Thanks!
	text block 3: 383 / 445 test cases passed.
	text block 4: Input: "aaa", "ab*ac*a"
Output: false
Expected: true

